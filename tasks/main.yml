---
  - name: Ensure OpenSSL is installed
    apt: name=openssl state=present
    when: ansible_os_family == "Debian"
    tags: [ssl-certs,packages]

  - name: Ensure ssl folder exist
    file:
      path: "{{ item.path }}"
      state: directory
      owner: "{{ ssl_certs_path_owner }}"
      group: "{{ ssl_certs_path_group }}"
      mode: "{{ ssl_certs_mode }}"
    with_items: "{{ ssl_certs }}"
    tags: [ssl-certs,configuration]

  - local_action: stat path={{ item.local_privkey_path }}
    register: stat_privkey
    become: no
    with_items: "{{ ssl_certs }}"
    tags: [ssl-certs,configuration]

  - local_action: stat path={{ item.local_cert_path }}
    register: stat_cert
    become: no
    with_items: "{{ ssl_certs }}"
    tags: [ssl-certs,configuration]

  - name: Test if privkey file is needed
    fail: msg="Privkey file {{ item.0.local_privkey_path }} is missing"
    when: not item.1.stat.exists and item.2.stat.exists
    with_together:
      - "{{ ssl_certs }}"
      - "{{ stat_privkey.results }}"
      - "{{ stat_cert.results }}"
    tags: [ssl-certs,configuration]

  - name: Test if cert file is needed
    fail: msg="Cert file {{ item.0.local_cert_path }} is missing"
    when: item.1.stat.exists and not item.2.stat.exists
    with_together:
      - "{{ ssl_certs }}"
      - "{{ stat_privkey.results }}"
      - "{{ stat_cert.results }}"
    tags: [ssl-certs,configuration]

  - name: Determine if certificate creation is necessary
    set_fact:
      ssl_certs_requires_creation: "{{ ssl_certs_requires_creation|default([]) + [( not item.1.stat.exists and not item.2.stat.exists) and ( item.0.local_privkey_data is undefined and item.0.local_cert_data is undefined )] }}"
    with_together:
      - "{{ ssl_certs }}"
      - "{{ stat_privkey.results }}"
      - "{{ stat_cert.results }}"
    tags: [ssl-certs,configuration]

  - include: generate.yml
    tags: [ssl-certs,configuration]

  - name: Copy SSL certificates
    copy:
      src: "{{ item.0.local_cert_path }}"
      dest: "{{ item.0.cert_path }}"
      owner: "{{ ssl_certs_path_owner }}"
      group: "{{ ssl_certs_path_group }}"
      mode: "{{ ssl_certs_mode }}"
    when: >
      ( item.1.stat.exists and item.2.stat.exists )
      and ( item.0.local_privkey_data is undefined and item.0.local_cert_data is undefined )
    with_together:
      - "{{ ssl_certs }}"
      - "{{ stat_privkey.results }}"
      - "{{ stat_cert.results }}"
    tags: [ssl-certs,configuration]

  - name: Copy SSL private keys
    copy:
      src: "{{ item.0.local_privkey_path }}"
      dest: "{{ item.0.privkey_path }}"
      owner: "{{ ssl_certs_path_owner }}"
      group: "{{ ssl_certs_path_group }}"
      mode: "{{ ssl_certs_mode }}"
    when: >
      ( item.1.stat.exists and item.2.stat.exists )
      and ( item.0.local_privkey_data is undefined and item.0.local_cert_data is undefined )
    with_together:
      - "{{ ssl_certs }}"
      - "{{ stat_privkey.results }}"
      - "{{ stat_cert.results }}"
    tags: [ssl-certs,configuration]

  - name: Copy SSL certificate from data
    copy:
      content: "{{ item.local_cert_data|default }}"
      dest: "{{ item.cert_path }}"
      owner: "{{ ssl_certs_path_owner }}"
      group: "{{ ssl_certs_path_group }}"
      mode: "{{ ssl_certs_mode }}"
    when: item.local_privkey_data is defined and item.local_cert_data is defined
    with_items: "{{ ssl_certs }}"
    no_log: true
    tags: [ssl-certs,configuration]

  - name: Copy SSL private key from data
    copy:
      content: "{{ item.local_privkey_data|default }}"
      dest: "{{ {{ item.privkey_path }} }}"
      owner: "{{ ssl_certs_path_owner }}"
      group: "{{ ssl_certs_path_group }}"
      mode: "{{ ssl_certs_mode }}"
    when: item.local_privkey_data is defined and item.local_cert_data is defined
    with_items: "{{ ssl_certs }}"
    no_log: true
    tags: [ssl-certs,configuration]

  - name: Generate strong DHE parameter - https://weakdh.org/
    command: openssl dhparam -out {{ ssl_certs_dhparam_path }} {{ ssl_certs_dhparam_size }} creates={{ ssl_certs_dhparam_path }}
    when: ssl_certs_generate_dh_param
    tags: [ssl-certs,configuration]
